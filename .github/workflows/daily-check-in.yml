name: Daily Check-in

on:
  schedule:
    #- cron: '0 1 * * *'  # 每天1点 UTC 时间执行
    #- cron: '0 */12 * * *'  # 每12小时执行一次
    - cron: '0 8 * * *'  # 每天 UTC 时间 8 点触发，实际执行时间会因随机延迟而变化

  workflow_dispatch:

jobs:
  run_script:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9.19'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps firefox

      - name: Wait random delay (0 to 15 hours)
        run: |
          delay=$(( RANDOM % 3600 )) # 1 hours * 60 min/hour * 60 sec/min = 3600 seconds
          echo "Sleeping for $delay seconds to randomize start time..."
          sleep $delay

      - name: Execute script
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          python main.py

      - name: Send Telegram Notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_USERID: ${{ secrets.TELEGRAM_USERID }}
        if: ${{ success() && env.TELEGRAM_TOKEN != '' && env.TELEGRAM_USERID != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id=${{ env.TELEGRAM_USERID }} \
          -d parse_mode=HTML \
          -d text="✅ <b>LINUX DO</b> 每日签到成功完成"

      - name: Send Failure Notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_USERID: ${{ secrets.TELEGRAM_USERID }}
        if: ${{ failure() && env.TELEGRAM_TOKEN != '' && env.TELEGRAM_USERID != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id=${{ env.TELEGRAM_USERID }} \
          -d parse_mode=HTML \
          -d text="❌ <b>LINUX DO</b> 每日签到失败"

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 10
          keep_minimum_runs: 6

      - name: Upload Debug Artifacts on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts-${{ github.run_id }}
          path: debug_artifacts/ # Upload content of the directory
          retention-days: 5 # Keep artifacts for 5 days
